import string

def compute(chr, n):
    for j in range(0, 8): # each bit in possible letter
        a = (ord(chr) >> 7-j) & 1
        b = (0x44940e8301e14fb33ba0da63cd5d2739ad079d571d9f5b987a1c3db2b60c92a3 >> (
            255 - (8*n) - j)) & 1
        c = (0xd208851a855f817d9b3744bd03fdacae61a70c9b953fca57f78e9d2379814c21 >> (
            255 - (8*n) - j)) & 1
        final = (a & b & (c^1)) | (a & (b^1) & c) | ((a^1) & b & c) | ((a^1) & (b^1) & (c^1))
        if final != 0:
            return False
    return True

def main():
    final = ""
    n = 0
    for _ in range(0,32): # each byte of flag
        for chr in string.printable: # each possible letter
            if compute(chr, n):
                final += chr
                break
        n += 1
    print(final)

main()